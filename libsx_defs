# All configuration options are at the top.  The things you'll want to
# look at are the CC variable, CFLAGS variable and the RANLIB
# variable.
#
# On Suns and DECstations we use gcc because the code is ANSI and
# their base compilers don't deal with ANSI code.
#
# On an SGI you can use plain old cc (or gcc if you feel like it and
# you have it).  Using cc seems to also work on the RS/6000 (though
# you may need the -xansi or -ansi flag). 
CC     = gcc
#CC     = cc


# Using gcc it's nice to be real strict and compile with -Wall, for
# production versions of the library you probably just want -O or -O2
#
# The -D_POSIX_SOURCE define is necessary on some systems (sun) 
# and less necessary on some systems like SGI.
#
# The -DOPENGL_SUPPORT is still preliminary and not suggested for
# general use (though if you do use it, I'd like to hear about it).
#
#
# On an SGI running Irix 5.x, I use:
#  CFLAGS = -O2 -D_POSIX_SOURCE
#
# On a sun w/sunos 4.1.1, I use:
#  CFLAGS = -O2 -D_POSIX_SOURCE
#
# On a Sun w/Solaris 2.3 and X11R6
#  CFLAGS = -O2 -D_POSIX_SOURCE -I/usr/X11R6/include -DSVR4
#
# On a DECstation, I used:
#  CFLAGS = -O2 -I/usr/include/mit
#
# On HP-UX, I've been told that the following works:
#  CFLAGS = +z -Aa -D_HPUX_SOURCE
#
# On an RS/6000 with AIX 3.2, twillis@drao.nrc.ca said that this works:
#  CFLAGS = -O -D_POSIX_SOURCE -DAIXV3 -I/usr/X11R5/include
#
# On an AIX running AIX 3.2.4 or higher w/AIXWindows 1.2.0 you might try:
#  CFLAGS = -O3 -D_POSIX_SOURCE
#
# On Linux, use CC=cc, RANLIB=ranlib, and:
CFLAGS = -Wall -O2 -D_POSIX_SOURCE -DXAW_ARROW_SCROLLBARS -DXAW_INTERNATIONALIZATION
#  
# On a Motorola Delta/88K box, you can use (with gcc):
#  CFLAGS = -O2 -DSYSV -DUSG -DMOTOROLA -DMOTOR32V2
#  [ You'll also have to shorten some of the filenames (sorry). ]
#
# If you're daring, and you have OpenGL, try:
#  CFLAGS = -g -D_POSIX_SOURCE -DOPENGL_SUPPORT
#
#CFLAGS = -g -D_POSIX_SOURCE -DOPENGL_SUPPORT 
#CFLAGS = -g -D_POSIX_SOURCE -fullwarn

#
# If you are on a System V (like the SGI) machine, just define RANLIB
# to be something innocuous like `echo'. On a Sun or other BSD machine
# (like a DECstation, AIX) we need to run the ranlib program.
#
RANLIB=ranlib
#RANLIB=echo

ifndef XAWLIB
XAWLIB=Xaw3dxft
endif

#
# libraries we need to link with...
#
# For most machines, the standard link line is fine.  For some you'll
# need to add -lXext, and if you compiled with -DOPENGL_SUPPORT, then
# you'll need to add -lGL for _any_ program that links with libsx.
#
# For SGI and SunOS 4.x, the following is fine:
#   LIBS   =  $(LIBSX) -l$(XAWLIB) -lXmu -lXt -lX11
#
# For Solaris 2.x, try:
#   LIBS   =  $(LIBSX) -l$(XAWLIB) -lXmu -lXt -lX11 -lsocket
#
# (NOTE: OpenWindows probably needs -lXext appended)
#
# For a DECstation, use:
#   LIBS   =  $(LIBSX) -l$(XAWLIB) -lXmu -lXt -lX11 -lXext
#
# RS/6000's may also need to append -L/usr/X11R5/lib
# to the LIBSX macro.  Some RS/6000's can get by with:
#   LIBS   =  $(LIBSX) -l$(XAWLIB) -lXmu -lXt -lX11 -lm -lXext
#
#
# Some other machines may need to append a -lm to the line.
#
# Again, if you're daring and have OpenGL, use:
#   LIBS   =  $(LIBSX) -l$(XAWLIB) -lXmu -lXt -lX11 -lXext -lGL
#

#LIBSX  = ../src/libsx.a
LIBSX = -lsx -L/usr/lib

XPM_SUPPORT = yes

LIBS   =  $(LIBSX) -lXpm -l$(XAWLIB) -lXmu -lXt -lX11 -L/usr/lib

